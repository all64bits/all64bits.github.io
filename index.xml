<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title/><link>/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 10 Feb 2019 16:53:06 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo</title><link>/project/hugo/</link><pubDate>Sun, 10 Feb 2019 16:53:06 -0500</pubDate><guid>/project/hugo/</guid><description/><content:encoded></content:encoded></item><item><title>About</title><link>/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/3/</guid><description>Hi, my name’s Mike Williams. Bio info plus photo?
What is all this? [[3.1 Website infrastructure]]</description><content:encoded><![CDATA[<p>Hi, my name’s Mike Williams. Bio info plus photo?</p>
<h3 id="what-is-all-this">What is all this?</h3>
<p>[[3.1 Website infrastructure]]</p>
]]></content:encoded></item><item><title>AI Generated "Art"</title><link>/post/7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/7/</guid><description>There has been a lot of discussion going on lately in tech circles discussing the quality and significance of &amp;ldquo;art&amp;rdquo; produced with Al models. I have been following it with interest, and many of my own thoughts.
I get the impression in particular that there is a fair amount of fear and uncertainty within the artistic community about what this technology means for their future, and their livelihoods; as discussed for example in this video on Jake Parker&amp;rsquo;s YouTube channel: https://youtu.</description><content:encoded><![CDATA[<p>There has been a lot of discussion going on lately in tech circles discussing the quality and significance of &ldquo;art&rdquo; produced with Al models. I have been following it with interest, and many
of my own thoughts.</p>
<p>I get the impression in particular that there is a fair amount of fear and uncertainty within the artistic community about what this technology means for their future, and their livelihoods; as discussed for example in this video on Jake Parker&rsquo;s YouTube channel: <a href="https://youtu.be/wqxLY9qekGY">https://youtu.be/wqxLY9qekGY</a></p>
<p>I think a lot of this fear and uncertainly comes from a misunderstanding of what art is.</p>
<p>An image, or a video, or a piece of audio has no intrinsic value of itself. It only has value insofar as it is able to elicit an emotional response in the people who experience it. If an AI model is able to produce an artwork which is able to create an emotional reaction in me, that is the criteria by which I will judge whether it has utility.</p>
<p>An Al can&rsquo;t judge whether something it produces has value; only a person can make that judgement. An Al can generate output, but it can&rsquo;t determine value. My expectation is that Al models will start to factor, heavily, into art production workflows and toolchains, but people will need to decide what fair compensation is for the end product, and how this is allocated - how much should go to the artist curating the output of the Al; how much should go to the company who created the Al model.</p>
<hr>
<h2 id="links">Links</h2>
<p>None</p>
]]></content:encoded></item><item><title>Bash getopts</title><link>/post/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/2/</guid><description>Bash builtin. Short options only
usage() { echo &amp;#34;Usage: $0 [-s &amp;lt;45|90&amp;gt;] [-p &amp;lt;string&amp;gt;]&amp;#34; 1&amp;gt;&amp;amp;2; exit 0; } while getopts &amp;#34;:s:p:&amp;#34; o; do case &amp;#34;${o}&amp;#34; in s) s=${OPTARG} ((s == 45 || s == 90)) || usage ;; p) p=${OPTARG} ;; *) usage ;; esac done shift $((OPTIND-1)) if [ -z &amp;#34;${s}&amp;#34; ] || [ -z &amp;#34;${p}&amp;#34; ]; then usage fi echo &amp;#34;s = ${s}&amp;#34; echo &amp;#34;p = ${p}&amp;#34; Usage $ .</description><content:encoded><![CDATA[<p>Bash builtin. Short options only</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>usage<span style="color:#f92672">()</span> <span style="color:#f92672">{</span> echo <span style="color:#e6db74">&#34;Usage: </span>$0<span style="color:#e6db74"> [-s &lt;45|90&gt;] [-p &lt;string&gt;]&#34;</span> 1&gt;&amp;2; exit 0; <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">while</span> getopts <span style="color:#e6db74">&#34;:s:p:&#34;</span> o; <span style="color:#66d9ef">do</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>o<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> in
</span></span><span style="display:flex;"><span>        s<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>            s<span style="color:#f92672">=</span><span style="color:#e6db74">${</span>OPTARG<span style="color:#e6db74">}</span>
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">((</span>s <span style="color:#f92672">==</span> <span style="color:#ae81ff">45</span> <span style="color:#f92672">||</span> s <span style="color:#f92672">==</span> 90<span style="color:#f92672">))</span> <span style="color:#f92672">||</span> usage
</span></span><span style="display:flex;"><span>            ;;
</span></span><span style="display:flex;"><span>        p<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>            p<span style="color:#f92672">=</span><span style="color:#e6db74">${</span>OPTARG<span style="color:#e6db74">}</span>
</span></span><span style="display:flex;"><span>            ;;
</span></span><span style="display:flex;"><span>        *<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>            usage
</span></span><span style="display:flex;"><span>            ;;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">esac</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>shift <span style="color:#66d9ef">$((</span>OPTIND-1<span style="color:#66d9ef">))</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -z <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>s<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span> <span style="color:#f92672">||</span> <span style="color:#f92672">[</span> -z <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>p<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    usage
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>echo <span style="color:#e6db74">&#34;s = </span><span style="color:#e6db74">${</span>s<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>echo <span style="color:#e6db74">&#34;p = </span><span style="color:#e6db74">${</span>p<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
</span></span></code></pre></div><h3 id="usage">Usage</h3>
<pre tabindex="0"><code class="language-usage" data-lang="usage"> $ ./myscript.sh
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]
 
 $ ./myscript.sh -h
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]

 $ ./myscript.sh -s &#34;&#34; -p &#34;&#34;
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]

 $ ./myscript.sh -s 10 -p foo
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]

 $ ./myscript.sh -s 45 -p foo
 s = 45
 p = foo

 $ ./myscript.sh -s 90 -p bar
 s = 90
 p = bar
</code></pre><hr>
<h2 id="links">Links</h2>
<p>None</p>
]]></content:encoded></item><item><title>How to set boundaries with your todo list</title><link>/post/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/4/</guid><description>I started dividing my to-do list into 1) things I have to do, 2) things I want to do, and 3) things other people want me to do. Life changing! I often don’t get to 3 and I finally realized omg, is this what it means to have boundaries?!1
Does this just translate to my [[4.2 Todoist]] P1-P4 prioritisation system?
Links [[4.1 The PARA Method]] Medium Article&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description><content:encoded><![CDATA[<blockquote>
<p>I started dividing my to-do list into 1) things I have to do, 2) things I want to do, and 3) things other people want me to do. Life changing! I often don’t get to 3 and I finally realized omg, is this what it means to have boundaries?!<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
</blockquote>
<p>Does this just translate to my [[4.2 Todoist]] P1-P4 prioritisation system?</p>
<hr>
<h2 id="links">Links</h2>
<ul>
<li></li>
<li>[[4.1 The PARA Method]]</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://twitter.com/jdesmondharris/status/1408868731707555840?s=20&amp;t=TgUsh9rNIwipZSiUvmXRAg&amp;utm_campaign=Recomendo&amp;utm_medium=email&amp;utm_source=Revue%20newsletter%5D(https://twitter.com/jdesmondharris/status/1408868731707555840?s=20&amp;t=TgUsh9rNIwipZSiUvmXRAg&amp;utm_campaign=Recomendo&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)">Medium Article</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>The PARA Method</title><link>/post/4.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/4.1/</guid><description>General thoughts How does PARA map to my Johnny Decimal index? This PARA approach links PKM systems to execution and productivity tools. The PARA methods are listed in order of actionability; i.e. active projects first, areas of responsibility second, resources third and archives fourth.
Method Description (P)rojects A series of tasks linked to a goal, with a deadline. Review each day
Has a goal to be achieved Has a deadline Fits more with todo management techniques Can fall under multiple Areas of Responsibility Getting a sense of current projects is the only way to assess capacity/utilisation.</description><content:encoded><![CDATA[<h2 id="general-thoughts">General thoughts</h2>
<p>How does PARA map to my Johnny Decimal index?
This PARA approach links PKM systems to execution and productivity tools.
The PARA methods are listed in order of actionability; i.e. active projects first, areas of responsibility second, resources third and archives fourth.</p>
<h2 id="method-description">Method Description</h2>
<h3 id="projects">(P)rojects</h3>
<p><em>A series of tasks linked to a goal, with a deadline. Review each day</em></p>
<ol>
<li>Has a goal to be achieved</li>
<li>Has a deadline</li>
</ol>
<ul>
<li>Fits more with todo management techniques</li>
<li>Can fall under multiple Areas of Responsibility</li>
<li>Getting a sense of current projects is the only way to assess capacity/utilisation. People make the mistake of thinking that they need to consider their Areas of Responsibility to undestand their workload, and this is the wrong approach.</li>
<li>Projects without a goal are “hobbies” and are therefore not projects but Areas of Responsibility</li>
<li>Goals without corresponding projects are “dreams”, and therefore again map to Areas of responsibility</li>
</ul>
<p>*Examples: Develop project plan; write blog post, attend conference</p>
<h3 id="area-of-responsibility">(A)rea of Responsibility</h3>
<p><em>A sphere of activity with a standard to be maintained over time. Review weekly, or more infrequently</em></p>
<ol>
<li>Has a standard to be maintained</li>
<li>Has no end date</li>
</ol>
<ul>
<li>Fits more with mind mapping &amp; PKM</li>
<li>Can contain a number of Projects</li>
<li>Areas of Responsibilities answer the “why”; projects answer the “how”. Therefore Areas of Responsibility need to drive your direction, but they need to be distilled into current, actionable projects to get anywhere in practical terms.</li>
</ul>
<p>*Examples: Health; Finances; Hobbies; Friends; Productivity; Creative</p>
<h3 id="resource">(R)esource</h3>
<p><em>A topic or theme of ongoing interest. Review when looking for something to do, or when source material is required for work on projects or areas of responsibility</em></p>
<p>Examples: Coffee; music; gardening; note-taking``</p>
<h3 id="archive">(A)rchive</h3>
<p><em>Inactive items from the other 3 categories. Review as part of PKM hiegyne under Areas of Responsiblity</em></p>
<p>Examples: completed or inactive projects; areas that you are no longer committed to; resources you are no longer interested in or pursuing</p>
<hr>
<h2 id="links">Links</h2>
<ul>
<li><a href="https://fortelabs.co/blog/para/">The PARA Method: A Universal System for Organising Digital Information</a></li>
<li>[[4 How to set boundaries with your to-do list]]</li>
<li>[[4.3 Johnny Decimal]]</li>
</ul>
]]></content:encoded></item><item><title>Todoist</title><link>/post/4.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/4.2/</guid><description>My preferred task management platform Has a web interface iOS app Good UI/UX Uses natural language input Has an open and accessible API Links [[4 How to set boundaries with your to-do list]]</description><content:encoded><![CDATA[<h3 id="my-preferred-task-management-platform">My preferred task management platform</h3>
<ul>
<li>Has a web interface</li>
<li>iOS app</li>
<li>Good UI/UX</li>
<li>Uses natural language input</li>
<li>Has an open and accessible API</li>
</ul>
<hr>
<h2 id="links">Links</h2>
<ul>
<li>[[4 How to set boundaries with your to-do list]]</li>
</ul>
]]></content:encoded></item><item><title>What Zettelkasten Actually Is</title><link>/post/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/1/</guid><description>The ability of software tools to do hyperlinking seems to have seriously muddled the basic concept of Zettelkasten. Although it might be that this was never particularly unified, and I just think of Luhman’s system as the “true Zettelkasten”.
Many discussions seem to suggest that Zettelkasten is merely the use of sequential ID numbers for note identification, rather than using note titles etc. My preference is for the use of the Luhman-style expanding tree ID’s - i.</description><content:encoded><![CDATA[<p>The ability of software tools to do hyperlinking seems to have seriously muddled the basic concept of Zettelkasten. Although it might be that this was never particularly unified, and I just think of Luhman’s system as the “true Zettelkasten”.</p>
<p>Many discussions seem to suggest that Zettelkasten is merely the use of sequential ID numbers for note identification, rather than using note titles etc. My preference is for the use of the Luhman-style expanding tree ID’s - i.e. first note is 1, next related note is 1b, next unrelated note is 2, next note related to 1b is 1b1, and so on.</p>
<p>Further to this, I like the idea of using note filenames in the style “ZK_ID (Note title).md”. That way I can search by either ZK ID or note title.</p>
<p>There are other considerations to a solid Zettelkasten system, such as index notes and topic notes etc.</p>
<p>![[PNG image.png]]
Source: [[https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125]]</p>
<hr>
<h2 id="links">Links</h2>
<p>None</p>
]]></content:encoded></item></channel></rss>