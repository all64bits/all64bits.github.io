<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>code_snippets on</title><link>/tags/code_snippets/</link><description>Recent content in code_snippets on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/code_snippets/index.xml" rel="self" type="application/rss+xml"/><item><title>Bash getopts</title><link>/post/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/2/</guid><description>Bash builtin. Short options only
usage() { echo &amp;#34;Usage: $0 [-s &amp;lt;45|90&amp;gt;] [-p &amp;lt;string&amp;gt;]&amp;#34; 1&amp;gt;&amp;amp;2; exit 0; } while getopts &amp;#34;:s:p:&amp;#34; o; do case &amp;#34;${o}&amp;#34; in s) s=${OPTARG} ((s == 45 || s == 90)) || usage ;; p) p=${OPTARG} ;; *) usage ;; esac done shift $((OPTIND-1)) if [ -z &amp;#34;${s}&amp;#34; ] || [ -z &amp;#34;${p}&amp;#34; ]; then usage fi echo &amp;#34;s = ${s}&amp;#34; echo &amp;#34;p = ${p}&amp;#34; Usage $ .</description><content:encoded><![CDATA[<p>Bash builtin. Short options only</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>usage<span style="color:#f92672">()</span> <span style="color:#f92672">{</span> echo <span style="color:#e6db74">&#34;Usage: </span>$0<span style="color:#e6db74"> [-s &lt;45|90&gt;] [-p &lt;string&gt;]&#34;</span> 1&gt;&amp;2; exit 0; <span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">while</span> getopts <span style="color:#e6db74">&#34;:s:p:&#34;</span> o; <span style="color:#66d9ef">do</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>o<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> in
</span></span><span style="display:flex;"><span>        s<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>            s<span style="color:#f92672">=</span><span style="color:#e6db74">${</span>OPTARG<span style="color:#e6db74">}</span>
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">((</span>s <span style="color:#f92672">==</span> <span style="color:#ae81ff">45</span> <span style="color:#f92672">||</span> s <span style="color:#f92672">==</span> 90<span style="color:#f92672">))</span> <span style="color:#f92672">||</span> usage
</span></span><span style="display:flex;"><span>            ;;
</span></span><span style="display:flex;"><span>        p<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>            p<span style="color:#f92672">=</span><span style="color:#e6db74">${</span>OPTARG<span style="color:#e6db74">}</span>
</span></span><span style="display:flex;"><span>            ;;
</span></span><span style="display:flex;"><span>        *<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>            usage
</span></span><span style="display:flex;"><span>            ;;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">esac</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>shift <span style="color:#66d9ef">$((</span>OPTIND-1<span style="color:#66d9ef">))</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -z <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>s<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span> <span style="color:#f92672">||</span> <span style="color:#f92672">[</span> -z <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>p<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    usage
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>echo <span style="color:#e6db74">&#34;s = </span><span style="color:#e6db74">${</span>s<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>echo <span style="color:#e6db74">&#34;p = </span><span style="color:#e6db74">${</span>p<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
</span></span></code></pre></div><h3 id="usage">Usage</h3>
<pre tabindex="0"><code class="language-usage" data-lang="usage"> $ ./myscript.sh
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]
 
 $ ./myscript.sh -h
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]

 $ ./myscript.sh -s &#34;&#34; -p &#34;&#34;
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]

 $ ./myscript.sh -s 10 -p foo
 Usage: ./myscript.sh [-s &lt;45|90&gt;] [-p &lt;string&gt;]

 $ ./myscript.sh -s 45 -p foo
 s = 45
 p = foo

 $ ./myscript.sh -s 90 -p bar
 s = 90
 p = bar
</code></pre><hr>
<h2 id="links">Links</h2>
<p>None</p>
]]></content:encoded></item></channel></rss>